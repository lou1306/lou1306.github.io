<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programmazione on lou1306</title>
    <link>http://lou1306.github.io/categories/programmazione/</link>
    <description>Recent content in Programmazione on lou1306</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>it-it</language>
    <lastBuildDate>Wed, 11 May 2016 12:30:34 +0200</lastBuildDate>
    <atom:link href="http://lou1306.github.io/categories/programmazione/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Personalizzare APM:Copter e inviare messaggi MAVLink</title>
      <link>http://lou1306.github.io/post/2016-05-11-apmcopter-custom-fw/</link>
      <pubDate>Wed, 11 May 2016 12:30:34 +0200</pubDate>
      
      <guid>http://lou1306.github.io/post/2016-05-11-apmcopter-custom-fw/</guid>
      <description>

&lt;p&gt;Il firmware &lt;a href=&#34;http://ardupilot.org/copter/index.html&#34;&gt;APM:Copter&lt;/a&gt; è una delle
principali soluzioni open-source per il pilotaggio remoto di droni. Vedremo
come è possibile eseguire codice personalizzato all&amp;rsquo;interno del sistema (che
nel mio caso è installato su una board PixHawk v2), ed inviare dati a terra
mediante il protocollo MAVLink.&lt;/p&gt;

&lt;h2 id=&#34;il-codice-di-apm-copter-e-i-submodules:e51c7bf6fa1b6d5892878683cf00765f&#34;&gt;Il codice di APM:Copter e i submodules&lt;/h2&gt;

&lt;p&gt;Per prima cosa bisogna clonare il repository da GitHub
(&lt;a href=&#34;https://github.com/ArduPilot/ardupilot&#34;&gt;link&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Purtroppo ho riscontrato dei problemi con i submodules del progetto, che
facevano riferimento ai vecchi URL &lt;code&gt;git://&lt;/code&gt; non più supportati da GitHub.
Ho risolto in questo modo:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Aprire &lt;code&gt;/ardupilot/.gitmodules&lt;/code&gt; e Sostituire tutti i &lt;code&gt;git://&lt;/code&gt; con &lt;code&gt;https://&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fare lo stesso in &lt;code&gt;/ardupilot/.git/CONFIG&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Eseguire &lt;code&gt;git submodule update --init&lt;/code&gt; nella directory &lt;code&gt;/ardupilot&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Eseguire i passi 1-3 per ciascun submodule che contenga un file &lt;code&gt;.gitmodules&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Per compilare/installare il firmware fate riferimento a
&lt;a href=&#34;http://ardupilot.org/dev/docs/building-the-code.html&#34;&gt;questa sezione&lt;/a&gt;
della documentazione di ArduPilot.&lt;/p&gt;

&lt;h2 id=&#34;gli-user-hooks:e51c7bf6fa1b6d5892878683cf00765f&#34;&gt;Gli &lt;em&gt;user hooks&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;APM:Copter è un esempio di sistema &lt;em&gt;real-time&lt;/em&gt;: contiene uno &lt;em&gt;scheduler&lt;/em&gt; che
pianifica l&amp;rsquo;esecuzione delle diverse funzionalità del sistema in base alla
frequenza desiderata dall&amp;rsquo;utente (es. 10 Hz) e al tempo previsto per
l&amp;rsquo;esecuzione stessa. In questo modo si garantisce che il drone sia sempre
in equilibrio e reattivo agli input dell&amp;rsquo;utente.&lt;/p&gt;

&lt;p&gt;Gli sviluppatori hanno inoltre realizzato un sistema che ci consentirà di
eseguire il nostro codice senza dover configurare a mano lo scheduler.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Il file &lt;code&gt;UserVariables.h&lt;/code&gt; serve a definire e inizializzare le variabili;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UserCode.cpp&lt;/code&gt; contiene una funzione &lt;code&gt;userhook_init()&lt;/code&gt; che viene eseguita
solo una volta all&amp;rsquo;avvio del sistema, e cinque &amp;ldquo;loops&amp;rdquo; con frequenze
decrescenti (100, 50, 25, 10, 1 Hz).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;APM_Config.h&lt;/code&gt; è un insieme di direttive che permettono la personalizzazione
del sistema. Andrà modificato per abilitare i loop appena menzionati.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;impariamo-a-contare:e51c7bf6fa1b6d5892878683cf00765f&#34;&gt;Impariamo a contare&lt;/h2&gt;

&lt;p&gt;Realizzeremo una variabile-contatore che incrementa il proprio valore di 1 con
una frequenza nominale di 10 Hz.&lt;/p&gt;

&lt;p&gt;Lo so che quello del contatore è un esempio trito e ritrito, ma almeno è
chiaro e ci permette di capire un sacco di cose sul sistema. Quindi in marcia.&lt;/p&gt;

&lt;h3 id=&#34;uservariables-h:e51c7bf6fa1b6d5892878683cf00765f&#34;&gt;&lt;code&gt;UserVariables.h&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Inseriamo la dichiarazione&lt;br /&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;count&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

all&amp;rsquo;inizio del file.&lt;/p&gt;

&lt;h3 id=&#34;usercode-cpp:e51c7bf6fa1b6d5892878683cf00765f&#34;&gt;&lt;code&gt;UserCode.cpp&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Modifichiamo &lt;code&gt;userhook_MediumLoop()&lt;/code&gt; come segue:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #75715e&#34;&gt;#ifdef USERHOOK_MEDIUMLOOP&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;Copter&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;userhook_MediumLoop()&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;(ap.initialised)&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;count&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;count&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;32000&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #75715e&#34;&gt;// Un valore a caso per riazzerare count&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #75715e&#34;&gt;#endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id=&#34;apm-config-h:e51c7bf6fa1b6d5892878683cf00765f&#34;&gt;&lt;code&gt;APM_Config.h&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Cerchiamo e decommentiamo queste direttive:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #75715e&#34;&gt;#define USERHOOK_VARIABLES &amp;quot;UserVariables.h&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #75715e&#34;&gt;#define USERHOOK_MEDIUMLOOP userhook_MediumLoop();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id=&#34;invio-dei-dati-alla-stazione-di-terra:e51c7bf6fa1b6d5892878683cf00765f&#34;&gt;Invio dei dati alla stazione di terra&lt;/h2&gt;

&lt;p&gt;Se siete impazienti come me potreste anche ricompilare e reinstallare il
firmware, ma ovviamente non avrete modo di accedere al fantomatico &lt;code&gt;count&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vediamo allora come fa il drone a comunicare con la GCS (&lt;em&gt;Ground control
station&lt;/em&gt;), che nel nostro caso è Mission Planner.&lt;/p&gt;

&lt;h3 id=&#34;mavlink:e51c7bf6fa1b6d5892878683cf00765f&#34;&gt;MAVLink&lt;/h3&gt;

&lt;p&gt;Il protocollo MAVLink (faccio riferimento alla versione 1.0) si basa su frame
così composti:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Header&lt;/th&gt;
&lt;th&gt;Payload&lt;/th&gt;
&lt;th&gt;Checksum&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;0-255&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;L&amp;rsquo;header a sua volta è composto da 6 campi, ciascuno di un byte:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Nome&lt;/th&gt;
&lt;th&gt;Significato&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Message header&lt;/td&gt;
&lt;td&gt;0xFE (costante)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Message length&lt;/td&gt;
&lt;td&gt;Lunghezza del payload&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Sequence number&lt;/td&gt;
&lt;td&gt;Consente di rilevare se un pacchetto è andato perduto&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;System ID&lt;/td&gt;
&lt;td&gt;ID del sistema (drone) che invia il messaggio: ad esempio per gestire &amp;ldquo;stormi&amp;rdquo; di droni.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Component ID&lt;/td&gt;
&lt;td&gt;ID del sottosistema che invia il messaggio&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Message ID&lt;/td&gt;
&lt;td&gt;Tipologia del messaggio.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Il Message ID è fondamentale per consentire al destinatario di decifrare il
payload.&lt;/p&gt;

&lt;h3 id=&#34;libraries-gcs-mavlink-gcs-h:e51c7bf6fa1b6d5892878683cf00765f&#34;&gt;&lt;code&gt;\libraries\GCS_MAVLink\GCS.h&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;aggiungiamo un valore &lt;code&gt;MSG_CUSTOM_COUNT&lt;/code&gt; al penultimo posto dell&amp;rsquo;enum
&lt;code&gt;ap_message&lt;/code&gt;:
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;enum&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;ap_message&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;MSG_HEARTBEAT,&lt;/span&gt;
    &lt;span style=&#34;color: #960050; background-color: #1e0010&#34;&gt;…&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;MSG_POSITION_TARGET_GLOBAL_INT,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;MSG_CUSTOM_COUNT,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;MSG_RETRY_DEFERRED&lt;/span&gt; &lt;span style=&#34;color: #75715e&#34;&gt;// this must be last&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;h3 id=&#34;copter-h:e51c7bf6fa1b6d5892878683cf00765f&#34;&gt;&lt;code&gt;Copter.h&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Aggiungiamo la definizione di questo metodo alla classe omonima:
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;send_count&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(mavlink_channel_t&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;chan);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;h3 id=&#34;gcs-mavlink-cpp:e51c7bf6fa1b6d5892878683cf00765f&#34;&gt;&lt;code&gt;GCS_Mavlink.cpp&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Questo file si occupa di gestire la comunicazione con la GCS e quindi qui si
concentrerà la maggior parte del lavoro.&lt;/p&gt;

&lt;p&gt;Implementiamo la funzione appena definita:
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;NOINLINE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;Copter&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;send_count(mavlink_channel_t&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;chan)&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;mavlink_msg_named_value_int_send(&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;chan,&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;AP_HAL&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;millis(),&lt;/span&gt;    &lt;span style=&#34;color: #75715e&#34;&gt;// uptime del sistema in ms (usato come timestamp)&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;count&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;count&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Modifichiamo la funzione &lt;code&gt;GCS_MAVLINK::try_send_message()&lt;/code&gt;
aggiungendo una nuova opzione allo &lt;code&gt;switch(id)&lt;/code&gt;:
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;switch&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(id)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #960050; background-color: #1e0010&#34;&gt;…&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;MSG_CUSTOM_COUNT:&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;copter.send_count(chan);&lt;/span&gt;
        &lt;span style=&#34;color: #66d9ef&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color: #960050; background-color: #1e0010&#34;&gt;…&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Infine facciamo sì che &lt;code&gt;data_stream_send()&lt;/code&gt; invii il messaggio:
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;GCS_MAVLINK&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;data_stream_send(&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #960050; background-color: #1e0010&#34;&gt;…&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;send_message(MSG_CUSTOM_COUNT);&lt;/span&gt;
    &lt;span style=&#34;color: #960050; background-color: #1e0010&#34;&gt;…&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;È opportuno posizionare questa istruzione &lt;em&gt;dopo&lt;/em&gt; l&amp;rsquo;ultima occorrenza del
controllo
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;(copter.gcs_out_of_time)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;In questo modo il messaggio sarà tra quelli a minor priorità possibile.&lt;/p&gt;

&lt;h2 id=&#34;verifica-su-mission-planner:e51c7bf6fa1b6d5892878683cf00765f&#34;&gt;Verifica su Mission Planner&lt;/h2&gt;

&lt;p&gt;Ora possiamo compilare il firmware e installarlo sulla nostra board.
Lanciamo Mission Planner. Nella scheda Help deve essere selezionata la casella
&amp;ldquo;&lt;strong&gt;Mostra la CONSOLE (Riavvio)&lt;/strong&gt;&amp;rdquo;. In caso contrario occorre selezionarla e
riavviare Mission Planner.&lt;/p&gt;

&lt;p&gt;A questo punto comparirà una console con alcuni messaggi relativi al
funzionamento di Mission Planner. Se ora stabiliamo la connessione con il
dispositivo vedremo anche qualche messaggio di diagnostica MAVLink:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bps 1663 loss 0 left 108 mem 23,40625
bps 1613 loss 0 left 108 mem 22,7744140625
bps 1613 loss 0 left 108 mem 22,1181640625
bps 1757 loss 0 left 307 mem 23,0859375
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Il tipo di messaggio che abbiamo usato (&lt;code&gt;NAMED_VALUE_INT&lt;/code&gt;) non viene
visualizzato normalmente: dovremo passare alla scheda &lt;strong&gt;Config/Tuning&lt;/strong&gt;, sezione
&lt;strong&gt;Planner&lt;/strong&gt; e selezionare la casella &amp;ldquo;&lt;strong&gt;messaggi debug Mavlink&lt;/strong&gt;&amp;rdquo; (in basso a
sinistra).&lt;/p&gt;

&lt;p&gt;La console ora stamperà tutti i messaggi ricevuti, tra cui quelli
personalizzati:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;FE 12  0  0 6C  1  1     FC mavlink_named_value_int_t time_boot_ms 98727 value 857 name count  sig  Len 26
FE 12  0  0 8A  1  1     FC mavlink_named_value_int_t time_boot_ms 99227 value 862 name count  sig  Len 26
FE 12  0  0 A5  1  1     FC mavlink_named_value_int_t time_boot_ms 99727 value 867 name count  sig  Len 26
FE 12  0  0 C2  1  1     FC mavlink_named_value_int_t time_boot_ms 100227 value 872 name count  sig  Len 26
FE 12  0  0 DD  1  1     FC mavlink_named_value_int_t time_boot_ms 100727 value 877 name count  sig  Len 26
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In altre parole, funziona!&lt;/p&gt;

&lt;h2 id=&#34;conclusioni:e51c7bf6fa1b6d5892878683cf00765f&#34;&gt;Conclusioni&lt;/h2&gt;

&lt;p&gt;Abbiamo esposto a grandi linee le modalità con cui è possibile eseguire codice
personalizzato sulla PixHawk e rendere disponibili dei dati alla stazione di
terra. Notiamo che:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Se avessimo voluto trasferire un numero a virgola mobile, avremmo dovuto usare
la funzione &lt;code&gt;mavlink_msg_named_value_float_send()&lt;/code&gt; anziché
&lt;code&gt;mavlink_msg_named_value_int_send()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;In genere l&amp;rsquo;invio di semplici coppie chiave-valore andrebbe limitato alla fase
di sviluppo/debug di una nuova funzionalità: per procedere nel modo più
corretto, si dovrebbe invece definire un tipo di messaggio personalizzato.
Così facendo si semplifica il contenuto del frame (solo valori) e si consente
al destinatario di riconoscere facilmente i messaggi da elaborare.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;riferimenti:e51c7bf6fa1b6d5892878683cf00765f&#34;&gt;Riferimenti&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://qgroundcontrol.org/mavlink/start&#34;&gt;http://qgroundcontrol.org/mavlink/start&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://mavlink.org/messages/common&#34;&gt;http://mavlink.org/messages/common&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Risorse utili per programmatori</title>
      <link>http://lou1306.github.io/post/2016-04-29-risorse_programmatori/</link>
      <pubDate>Fri, 29 Apr 2016 12:00:36 +0200</pubDate>
      
      <guid>http://lou1306.github.io/post/2016-04-29-risorse_programmatori/</guid>
      <description>

&lt;p&gt;Ecco una carrellata di materiale che mi è tornato utile negli ultimi tempi.
Anche se è principalmente a mio uso e consumo (non voglio dimenticare i titoli e
alcune informazioni a contorno, nel caso i link dovessero scomparire in futuro),
spero possa far comodo anche ad altri programmatori/smanettoni.&lt;/p&gt;

&lt;h2 id=&#34;ebooks:0e71993fe6fa650dd0d548626271dd3e&#34;&gt;Ebooks&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://cacr.uwaterloo.ca/hac/&#34;&gt;The Handbook of Applied Cryptography&lt;/a&gt;&lt;/strong&gt;: le
basi teoriche e oltre 200 algoritmi relativi al mondo della crittografia. Una
manna se avete un esame e/o dovete implementare qualcosa che abbia a che fare
con l&amp;rsquo;argomento.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The primary objective of an adversary who wishes to “attack” a public-key
encryption scheme is to systematically recover plaintext from ciphertext
intended for some other entity A. If this is achieved, the encryption scheme
is informally said to have been broken.&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://medium.mybridge.co/the-most-useful-free-ebooks-for-web-developers-3854767ee52f#.tks8tbwn0&#34;&gt;The Most Useful Free eBooks for Web Developers&lt;/a&gt;&lt;/strong&gt;:
collezione di ebook per sviluppatori HTML5/Javascript/CSS3. Ovviamente non li
ho letti tutti, ma gli autori della pagina sostengono di averli selezionati da
una lista iniziale di 400; questi 17 sono i più visualizzati/consigliati dalla
comunità online, quindi tendo a fidarmi della qualità di ciascuno di essi.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Design patterns are reusable solutions to commonly occurring problems in
software design. They are both exciting and a fascinating topic to explore
in any programming language.&lt;/p&gt;

&lt;p&gt;(Da &lt;em&gt;Learning Javascript Design Patterns&lt;/em&gt;)&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.oreilly.com/programming/free/functional-programming-python.csp&#34;&gt;Functional programming in Python&lt;/a&gt;&lt;/strong&gt;
è un&amp;rsquo;ottima introduzione all&amp;rsquo;uso dei costrutti principali della programmazione
funzionale. Python di per sé non è un linguaggio funzionale, il che a mio
parere può aiutare lo sviluppatore &amp;ldquo;OO/strutturato&amp;rdquo; nella transizione. Sempre
a mio parere, trovo che l&amp;rsquo;applicazione ragionata di queste tecniche rendano
più leggibile, flessibile e &amp;ldquo;debuggabile&amp;rdquo; il prodotto finale.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A comprehension is an expression that uses the same keywords as loop and
conditional blocks, but inverts their order to focus on the data rather than
on the procedure. Simply changing the form of expression can often make a
surprisingly large difference in how we reason about code and how easy it is
to understand.&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;guide:0e71993fe6fa650dd0d548626271dd3e&#34;&gt;Guide&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://matt.sh/howto-c&#34;&gt;How to C (as of 2016)&lt;/a&gt;&lt;/strong&gt;: ok, il K&amp;amp;R è la Bibbia,
ma scrivere in C nel 2016 significa anche approfittare delle evoluzioni dello
standard per ottenere codice più leggibile e &amp;ldquo;prevedibile&amp;rdquo;.&lt;br /&gt;
Un tale Keith Thompson (da non confondere con Ken, uno dei papà di
UNIX) ha successivamente pubblicato
&lt;a href=&#34;https://github.com/Keith-S-Thompson/how-to-c-response&#34;&gt;un articolo di risposta&lt;/a&gt;
altrettanto interessante.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The first rule of C is don’t write C if you can avoid it.&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.alexkras.com/19-git-tips-for-everyday-use/&#34;&gt;19 Git tips for everyday use&lt;/a&gt;&lt;/strong&gt;:
la complessità di &lt;code&gt;git&lt;/code&gt; può incutere timore, e non a torto. Qui ci sono alcuni
consigli per sfruttarlo al meglio da linea di comando. Dello stesso autore
anche un ottimo &lt;a href=&#34;http://www.alexkras.com/getting-started-with-git/&#34;&gt;cheat sheet&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I like to create a new branch for every new bug or feature. Among other
benefits, it helps me to get a great clarity on how a series of commits may
relate to a particular task. If you ever merged a pull request on github or
a similar tool, you will in fact be able to nicely see the merged branch
history in &lt;code&gt;git log --oneline --graph&lt;/code&gt; view.&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;strumenti-online:0e71993fe6fa650dd0d548626271dd3e&#34;&gt;Strumenti online&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;http://leaverou.github.io/contrast-ratio/&#34;&gt;Contrast Ratio&lt;/a&gt;&lt;/strong&gt;: tool per
verificare se il rapporto tra due colori (testo/sfondo) rispetta le linee
guida sull&amp;rsquo;accessibilità &lt;a href=&#34;https://en.wikipedia.org/wiki/Web_Content_Accessibility_Guidelines#WCAG_2.0&#34;&gt;WCAG 2&lt;/a&gt;.
Utile per il web design.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://repl.it/languages&#34;&gt;repl.it&lt;/a&gt;&lt;/strong&gt;: &lt;em&gt;Read-Eval-Print Loop&lt;/em&gt; è un sinonimo
ampolloso per &amp;ldquo;shell interattiva&amp;rdquo;. Questo sito permette di testare piccoli
programmi scrivendoli direttamente nella shell o nella casella di testo a
fianco.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;http://dillinger.io/&#34;&gt;Dillinger&lt;/a&gt;&lt;/strong&gt;: un buon editor MarkDown con anteprima
in tempo reale, consente anche di esportare il proprio documento in PDF o di
interagire con diversi servizi cloud.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;dataset-collezioni:0e71993fe6fa650dd0d548626271dd3e&#34;&gt;Dataset/collezioni&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://stocksnap.io&#34;&gt;StockSnap&lt;/a&gt;&lt;/strong&gt;: archivio di immagini con licenza
Creative Commons Zero (CC0). In altre parole potete usarle in qualunque
progetto, anche commerciale, senza dover nemmeno citare la fonte.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;http://www.pcn.minambiente.it/GN/accesso-ai-servizi/servizi-di-visualizzazione-wms&#34;&gt;WMS Geoportale Nazionale&lt;/a&gt;&lt;/strong&gt;:
il Ministero dell&amp;rsquo;Ambiente mette a disposizione numerosi dataset, che grazie
a questi endpoint WMS possono essere consultati direttamente da applicazioni
come Quantum GIS o ArcGIS.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;humour-cultura-generale:0e71993fe6fa650dd0d548626271dd3e&#34;&gt;Humour/Cultura generale&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.inwap.com/pdp10/hbaker/hakmem/hakmem.html&#34;&gt;HAKMEM&lt;/a&gt;&lt;/strong&gt; è uno
storico &lt;em&gt;memo&lt;/em&gt; che circolava nel laboratorio AI del MIT. Scritto nel 1972,
contiene dimostrazioni matematiche, algoritmi, trucchi e veri e propri &lt;em&gt;hack&lt;/em&gt;
per effettuare operazioni nel minor numero di cicli possibili. Una
versione PDF &lt;em&gt;searchable&lt;/em&gt;, basata sulle scansioni dell&amp;rsquo;originale, è
disponibile &lt;a href=&#34;http://w3.pppl.gov/~hammett/work/2009/AIM-239-ocr.pdf&#34;&gt;qui&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Here is some little known data which may be of interest to computer hackers.
The items and examples are so sketchy that to decipher them may require more
sincerity and curiosity than a non-hacker can muster. Doubtless, little of
this is new, but nowadays it&amp;rsquo;s hard to tell.&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://web.mit.edu/~simsong/www/ugh.pdf&#34;&gt;The UNIX-Haters Handbook&lt;/a&gt;&lt;/strong&gt;: un
libro un po&amp;rsquo; datato che raccoglie storie dell&amp;rsquo;orrore, curiosità e critiche
tutte incentrate su questo storico sistema operativo. Molti passaggi sono
tuttora validi, ma altrettanti sono reliquie di un tempo lontano, per cui lo
considero un libro umoristico più che un manuale tecnico. Vale la pena leggere
una &lt;a href=&#34;http://esr.ibiblio.org/?p=538&#34;&gt;risposta al libro&lt;/a&gt; da parte di Eric S.
Raymond.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Users care deeply about their files and data. They use computers to
generate, analyze, and store important information. They trust the computer
to safeguard their valuable belongings. Without this trust, the relationship
becomes strained. Unix abuses our trust by steadfastly refusing to protect
its clients from dangerous commands. In particular, there is &lt;code&gt;rm&lt;/code&gt;, that most
dangerous of commands, whose &lt;em&gt;raison d’etre&lt;/em&gt; is deleting files.&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://codecrap.com/&#34;&gt;CodeCrap&lt;/a&gt;&lt;/strong&gt;: lo slogan, &amp;ldquo;&lt;em&gt;where developers go to laugh
and cry&lt;/em&gt;&amp;rdquo;, dice tutto.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;try {   
    return true;
} finally {
    return false;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;credits:0e71993fe6fa650dd0d548626271dd3e&#34;&gt;Credits&lt;/h2&gt;

&lt;p&gt;Ho scoperto molti articoli di questa lista grazie alle comunità di
&lt;a href=&#34;https://news.ycombinator.com/&#34;&gt;Hacker News&lt;/a&gt; e di
&lt;a href=&#34;http://reddit.com/r/programming&#34;&gt;r/programming&lt;/a&gt;: sono ottimi punti di
riferimento per tutti gli addetti ai lavori.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>